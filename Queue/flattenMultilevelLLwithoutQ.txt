#include <bits/stdc++.h>
using namespace std;


class node{
    public:
    int data;
    node* next;
    node* down;
    node(int data){
        this->data = data;
        next = down = NULL;
    }
};


void flattenLL(node *h){
    node *cur = h;
    node *last = h;
    
    while(last->next != NULL){
        last = last->next;
    }
    
    while(cur != last){
        if(cur->down){
            last->next = cur->down;
            
            node *tmp = cur->down;
            while(tmp->next != NULL){
                tmp = tmp->next;
            }
            last = tmp;
            
        }
        cur = cur->next;
}
    
}
    

int main()
{
  node *n1 = new node(10);
    node *n2 = new node(20);
    node *n3 = new node(30);
    node *n4 = new node(40);
    node *n5 = new node(50);
    node *n6 = new node(60);
    node *n7 = new node(70);
    node *n8 = new node(80);
    node *n9 = new node(90);
    node *n10 = new node(100);
    
    node *head = n1;
    
    head->next = n2;
    n2->next = n3;
    n3->next = n4;
    
    n2->down = n5;
    n5->next = n6;
    n4->down = n7;
    
    n5->down = n8;
    n6->down = n9;
    n9->next = n10;

    
    
   flattenLL(head);
   
   node *p = head;
   while(p != NULL){
       cout<<p->data<<" ";
       p = p->next;
   }
}

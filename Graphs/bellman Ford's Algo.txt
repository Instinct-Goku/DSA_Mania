#include<bits/stdc++.h>
using namespace std;

vector <int> bellManFord(int V, vector<vector<int>> adj, int S) {
        
        vector<int> dist(V, 1e8);
        
        dist[S] = 0;
        
        for(int i = 0; i < V-1; i++) {
            for(auto x : adj) {
                if(dist[x[0]] + x[2] < dist[x[1]]){
                    dist[x[1]] = dist[x[0]] + x[2];
                }
            }
        }
        return dist;
    }


int main() {
    int vertex;
    int edges;
    cin>>vertex>>edges;

   vector<vector<int>> adj;
   int u ,v, w;
   for(int i = 0; i < edges; i++) {
        cin>>u>>v>>w;
        vector<int> t1;
        t1.push_back(u);
        t1.push_back(v);
        t1.push_back(w);
        adj.push_back(t1);
   }

   int source;
   cin>>source;

   vector<int> ans = bellManFord(vertex, adj, source);
   for(int i = 0 ; i < ans.size()-1; i++)
        cout<<ans[i]<<" ";
}


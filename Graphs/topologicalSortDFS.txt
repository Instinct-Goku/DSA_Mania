#include<bits/stdc++.h>
using namespace std;


void dfs(int src, vector<int> adj[], vector<bool> &visited, stack<int> &s) {
    visited[src] = true;
    
    for(auto x: adj[src]) {
        if(!visited[x]) {
            dfs(x, adj, visited, s);
        }
    }
    
    s.push(src);
}


vector<int> topoSort(int V, vector<int> adj[]) 
{
    vector<int> ans;
    stack<int> s;
    
    vector<bool> visited(V, false);
    
    for(int i = 0; i < V; i++) {
        if(!visited[i]) {
            dfs(i, adj, visited, s);
        }
    }
    
    while(!s.empty()) {
        ans.push_back(s.top());
        s.pop();
    }
    
    return ans;
}

int main() {
    int V, E;
    cin>>V>>E;

    vector<int> adj[V];

    int u,v;

    for(int i = 0; i < E; i++) {
        cin>>u>>v;
        adj[u].push_back(v);
    }

    vector<int> ans = topoSort(v, adj);

    for(int i = 0; i < ans.size(); i++) 
        cout<<ans[i]<<" ";
}


#include<bits/stdc++.h>
using namespace std;

int findPivot(int *a, int l, int h){
    while(l <= h) {
        int mid = (l+h)/2;
        if(a[mid] >= a[mid-1] && a[mid] >= a[mid+1])
            return mid;
        
        if(a[mid] >= a[mid-1] && a[mid] <= a[mid+1]){
            l = mid+1;
        }
        else{
            h = mid-1;
        }
    }
}

int binarySearch(int *a, int l, int h, int key) {
    while(l <= h){
        int mid = (l+h)/2;
        if(a[mid] == key)
            return mid;
        
        if(key < a[mid])
            h = mid-1;
        else
            l = mid+1;
    }
    return -1;
}

int main() {
    int a[] = {5, 6, 7, 8, 9, 10, 3, 2, 1};
    int n = sizeof(a)/sizeof(a[0]);
    int index = findPivot(a, 0, n-1);
    int key = 9;
    if(key == a[index])
        cout<<index;
    else{
        int res = binarySearch(a, 0, index, key);
        if(res != -1)
            cout<<res;
        else
            cout<<binarySearch(a, index+1, n-1, key);
    }
}
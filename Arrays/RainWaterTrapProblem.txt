#include<bits/stdc++.h>
using namespace std;

int rainWater(int wall[], int n){
    int left[n], right[n];
    int maxWall = 0; 
    for(int i = 0; i<n; i++){
        maxWall =  max(wall[i], maxWall);
        left[i] = maxWall;
    }
    maxWall = 0;
    for(int i = n-1; i>=0; i--){
        maxWall =  max(wall[i], maxWall);
        right[i] = maxWall;
    }
    int res = 0;
    for(int i = 0; i < n; i++){
        res += min(left[i], right[i]) - wall[i];
    }
    return res;
}

//time->O(N), space->O(1)
int rainWater(int *wall, int n) {
    int l = wall[0], r = wall[n-1];
    int ans = 0;
    int i = 0,j = n-1;
    
    while(i < j) {
        l = max(l,wall[i]);
        r = max(r,wall[j]);
        
        if(l <= r) {
            ans += l-wall[i++];
        }
        else ans += r-wall[j--];
    }
    
    return ans;
}


int main() {
    int wall[] = {3, 0, 2, 0, 4};
    int n = sizeof(wall)/sizeof(wall[0]);
    cout<<rainWater(wall, n);
}
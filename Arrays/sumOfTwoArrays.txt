// C++ program to implement
// the above approach

#include <bits/stdc++.h>
using namespace std;




void sumArrays(int *a, int *b, int n, int m) {
	int i = n-1;
	int j = m-1;

	int carry = 0;
	vector<int> v;

	while(i >= 0 && j >= 0) {
		int sum = a[i]+b[j]+carry;
		v.push_back(sum%10);
		carry = sum/10;
		i--;
		j--;
	}

	while(i >= 0){
		int sum = a[i]+carry;
		v.push_back(sum%10);
		carry = sum/10;
		i--;
	}

	while(j >= 0){
		int sum = b[j]+carry;
		v.push_back(sum%10);
		carry = sum/10;
		j--;
	}

	if(carry)
		v.push_back(carry);

	reverse(v.begin(),v.end());


	for(int i = 0; i < v.size();i++){
		cout<<v[i]<<" ";
	}
}

// Driver Code
int main() {
	int a[] = {1,5,6,7,8,0};
	int b[] = {1,2};
	int n = sizeof(a)/sizeof(a[0]);
	int m = sizeof(b)/sizeof(b[0]);
	
	sumArrays(a,b,n,m);
	
}

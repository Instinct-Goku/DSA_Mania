#include<bits/stdc++.h>
using namespace std;

int bottomUpDP(int *a,int n) {
    a[0] = 0;
    a[1] = 1;
    for(int i = 2; i < n; i++) {
        a[i] = a[i-1] + a[i-2];
    }
    return a[n];
}

int topDownDP(int *a,int n) {
    if (n <= 1) {
        a[n] = n;
        return n;
    }
        
    
    if (a[n] != -1)
        return a[n];
    else
        a[n] = topDownDP(a, n-1) + topDownDP(a, n-2);
    
    return a[n];

}

int main() {
    int n = 10,a[20];
    for (int i =0; i < 20; i++)
        a[i] = -1;
    cout<<topDownDP(a,n)<<endl;
    cout<<bottomUpDP(a,n);
}